{"version":3,"sources":["app/maps/SimpleMap.js"],"names":["geoUrl","SimpleMap","className","aria-label","href","onClick","event","preventDefault","aria-current","zoom","geography","geographies","map","geo","key","rsmKey","projectionConfig","scale","stroke","strokeWidth","projection","fill","coordinates","r","center","from","to","strokeLinecap","Component"],"mappings":"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","file":"static/js/102.dca501e3.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Sphere,\n  Graticule,\n  Marker,\n  Line\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nexport class SimpleMap extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\"> React Simple Maps </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Maps</a></li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Simple Maps</li>\n            </ol>\n          </nav>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">ZoomableGroup</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap>\n                    <ZoomableGroup zoom={1}>\n                      <Geographies geography={geoUrl}>\n                        {({ geographies }) =>\n                          geographies.map(geo => (\n                            <Geography key={geo.rsmKey} geography={geo} />\n                          ))\n                        }\n                      </Geographies>\n                    </ZoomableGroup>\n                  </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Sphere</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap projectionConfig={{ scale: 147 }}>\n                    <Sphere stroke=\"#FF5533\" strokeWidth={2} />\n                    <Geographies geography={geoUrl}>\n                      {({ geographies }) =>\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n                      }\n                    </Geographies>\n                  </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Graticule</h4>\n                <div className=\"map-dimension\">\n                <ComposableMap projectionConfig={{ scale: 147 }}>\n                  <Graticule stroke=\"#F53\" />\n                  <Geographies geography={geoUrl}>\n                    {({ geographies }) =>\n                      geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n                    }\n                  </Geographies>\n                </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Geographies</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap>\n                    <Geographies geography={geoUrl}>\n                      {({ geographies }) =>\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n                      }\n                    </Geographies>\n                  </ComposableMap>`\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Marker</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap projection=\"geoAlbers\">\n                    <Geographies geography={geoUrl}>\n                      {({ geographies }) =>\n                        geographies.map(geo => (\n                          <Geography\n                            key={geo.rsmKey}\n                            geography={geo}\n                            fill=\"#DDD\"\n                            stroke=\"#FFF\"\n                          />\n                        ))\n                      }\n                    </Geographies>\n                    <Marker coordinates={[-74.006, 40.7128]}>\n                      <circle r={8} fill=\"#F53\" />\n                    </Marker>\n                  </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Line</h4>\n                <div className=\"map-dimension\">\n                  <ComposableMap\n                    projection=\"geoEqualEarth\"\n                    projectionConfig={{\n                      scale: 420,\n                      center: [-40, 30]\n                    }}\n                  >\n                    <Graticule stroke=\"#DDD\" />\n                    <Geographies\n                      geography={geoUrl}\n                      fill=\"#D6D6DA\"\n                      stroke=\"#FFFFFF\"\n                      strokeWidth={0.5}\n                    >\n                      {({ geographies }) =>\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n                      }\n                    </Geographies>\n                    <Line\n                      from={[2.3522, 48.8566]}\n                      to={[-74.006, 40.7128]}\n                      stroke=\"#FF5533\"\n                      strokeWidth={4}\n                      strokeLinecap=\"round\"\n                    />\n                  </ComposableMap>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SimpleMap\n"],"sourceRoot":""}