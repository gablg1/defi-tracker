{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","app/apps/TodoListRtl.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","TodoListRtl","className","aria-label","href","onClick","evt","preventDefault","aria-current","TodoListRtlComponent","Component","props","state","todos","id","task","isCompleted","inputValue","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","event","todo","this","checked","setState","unshift","index","splice","value","onSubmit","type","placeholder","onChange","required","map","ListItem","changed","remove","htmlFor","children"],"mappings":"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","file":"static/js/57.606ccc2f.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { Component } from 'react'\nimport { Trans } from 'react-i18next';\n\nexport class TodoListRtl extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Todo List\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={evt =>evt.preventDefault()}>Apps</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Todo List</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Todo List</h4>\n                                <TodoListRtlComponent />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class TodoListRtlComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            todos: [\n                {\n                    id: 1,\n                    task: 'التقاط الاطفال من المدرسة',\n                    isCompleted: false\n                },\n                {\n                    id: 2,\n                    task: 'الاستعداد للعرض التقديمي الخاص بك',\n                    isCompleted: true\n                },\n                {\n                    id: 3,\n                    task: 'طباعة البيانات',\n                    isCompleted: false\n                },\n                {\n                    id: 4,\n                    task: 'انشاء الفواتير',\n                    isCompleted: false\n                },\n                {\n                    id: 5,\n                    task: 'استدعاء جون',\n                    isCompleted: true\n                },\n                {\n                    id: 6,\n                    task: 'مقابلة مع اليسا',\n                    isCompleted: false\n                }\n            ],\n            inputValue: '',\n        }\n\n        this.statusChangedHandler = this.statusChangedHandler.bind(this);\n        this.addTodo = this.addTodo.bind(this);\n        this.removeTodo = this.removeTodo.bind(this);\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    }\n\n    statusChangedHandler(event, id) {\n        const todo = {...this.state.todos[id]};\n        todo.isCompleted = event.target.checked;\n\n        const todos = [...this.state.todos];\n        todos[id] = todo;\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    addTodo (event) {\n        event.preventDefault();\n\n        const todos = [...this.state.todos];\n        todos.unshift({\n            id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n            task: this.state.inputValue,\n            isCompleted: false\n            \n        })\n\n        this.setState({\n            todos: todos,\n            inputValue: ''\n        })\n    }\n\n    removeTodo (index) {\n        const todos = [...this.state.todos];\n        todos.splice(index, 1);\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    inputChangeHandler(event) {\n        this.setState({\n            inputValue: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <form  className=\"add-items d-flex\" onSubmit={this.addTodo}>\n                    <input \n                        type=\"text\" \n                        className=\"form-control h-auto\" \n                        placeholder=\"ماذا تحتاج أن تفعل اليوم؟\" \n                        value={this.state.inputValue} \n                        onChange={this.inputChangeHandler}\n                        required />\n                    <button type=\"submit\" className=\"btn btn-primary\"><Trans>Add</Trans></button>\n                </form>\n                <div className=\"list-wrapper\">\n                    <ul className=\"d-flex flex-column todo-list\">\n                        {this.state.todos.map((todo, index) =>{\n                            return <ListItem \n                            isCompleted={todo.isCompleted}\n                            changed={(event) => this.statusChangedHandler(event, index)}\n                            key={todo.id}\n                            remove={() => this.removeTodo(index) }\n                            >{todo.task}</ListItem>\n                        })}\n                    </ul>\n                </div>\n            </>\n        )\n    }\n}\n\nconst ListItem = (props) => {\n    \n    return (\n        <li className={(props.isCompleted ? 'completed' : null)}>\n            <div className=\"form-check\">\n                <label htmlFor=\"\" className=\"form-check-label\"> \n                    <input className=\"checkbox\" type=\"checkbox\" \n                        checked={props.isCompleted} \n                        onChange={props.changed} \n                        /> {props.children} <i className=\"input-helper\"></i>\n                </label>\n            </div>\n            <i className=\"remove mdi mdi-close-box\" onClick={props.remove}></i>\n        </li>\n    )\n};\n\nexport default TodoListRtl\n"],"sourceRoot":""}