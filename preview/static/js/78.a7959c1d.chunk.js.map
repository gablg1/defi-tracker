{"version":3,"sources":["app/basic-ui/Tooltips.js"],"names":["Tooltips","className","aria-label","href","onClick","event","preventDefault","aria-current","overlay","id","variant","style","pointerEvents","map","placement","key","color","trigger","Title","as","Content","Component"],"mappings":"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","file":"static/js/78.a7959c1d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { OverlayTrigger, Tooltip, Button, ButtonToolbar, Popover } from 'react-bootstrap';\n\nexport class Tooltips extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\"> Tooltips </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Tooltips</li>\n            </ol>\n          </nav>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Basic tooltip</h4>\n                <p className=\"card-description\">Basic tooltip demo that appears on hover</p>\n                <p>Hover the below button for interactive demo</p>\n                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Basic Tooltip</Tooltip>}>\n                  <span className=\"d-inline-block\">\n                    <Button variant=\"primary\" style={{ pointerEvents: 'none' }}>\n                      Hover me\n                    </Button>\n                  </span>\n                </OverlayTrigger>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Tooltip positions</h4>\n                <p className=\"card-description\">Add attribute <code>placement=&#123;position&#125;</code> to the element</p>\n                <div className=\"tooltip-demo\">\n                <ButtonToolbar>\n                  {['top', 'right', 'bottom', 'left'].map(placement => (\n                    <OverlayTrigger\n                      key={placement}\n                      placement={placement}\n                      overlay={\n                        <Tooltip id={`tooltip-${placement}`}>\n                          Tooltip on <strong>{placement}</strong>.\n                        </Tooltip>\n                      }\n                    >\n                      <Button variant=\"primary\">Tooltip on {placement}</Button>\n                    </OverlayTrigger>\n                  ))}\n                </ButtonToolbar>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Tooltip Colors</h4>\n                <p className=\"card-description\">Add attribute <code>className=&#123;`tooltip-&#123;color&#125;`&#125;</code> to the element</p>\n                <div className=\"tooltip-demo\">\n                <ButtonToolbar>\n                  {['success', 'info', 'warning', 'primary', 'danger'].map(color => (\n                    <OverlayTrigger\n                      overlay={\n                        <Tooltip className={`tooltip-${color}`} id={`tooltip-${color}`}>\n                          Tooltip on <strong>{color}</strong>.\n                        </Tooltip>\n                      }\n                    >\n                      <Button variant={`${color}`} className=\"mr-2 mb-2\">Tooltip {color}</Button>\n                    </OverlayTrigger>\n                  ))}\n                </ButtonToolbar>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Basic popover</h4>\n                <p className=\"card-description\">Basic popover demo that appears on click</p>\n                <p>Click the below button for interactive demo</p>\n                <OverlayTrigger\n                  trigger=\"click\"\n                  placement=\"right\"\n                  overlay={\n                    <Popover id=\"popover-basic\">\n                      <Popover.Title as=\"h3\">Popover title</Popover.Title>\n                      <Popover.Content>\n                        Sed posuere consectetur est at lobortis. Aenean eu leo quam.\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <Button variant=\"primary\">Click me</Button>\n                </OverlayTrigger>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Popover positions</h4>\n                <p className=\"card-description\">Add attribute <code>placement=\"&#123;position&#125;\"</code> to the element</p>\n                <div className=\"popover-demo\">\n                  <ButtonToolbar>\n                    {['top', 'right', 'bottom', 'left'].map(placement => (\n                      <OverlayTrigger\n                        trigger=\"click\"\n                        key={placement}\n                        placement={placement}\n                        overlay={\n                          <Popover id={`popover-positioned-${placement}`}>\n                            <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                            <Popover.Content>\n                              Sed posuere consectetur est at lobortis. Aenean eu leo quam.\n                            </Popover.Content>\n                          </Popover>\n                        }\n                      >\n                        <Button variant=\"primary\">Popover on {placement}</Button>\n                      </OverlayTrigger>\n                    ))}\n                  </ButtonToolbar>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Popover Colors</h4>\n                <p className=\"card-description\">Add attribute <code>placement=\"&#123;position&#125;\"</code> to the element</p>\n                <div className=\"popover-demo\">\n                  <ButtonToolbar>\n                    {['success', 'info', 'warning', 'primary', 'danger'].map(color => (\n                      <OverlayTrigger\n                        trigger=\"click\"\n                        overlay={\n                          <Popover id={`popover-color-${color}`} className={`popover-${color}`}>\n                            <Popover.Title as=\"h3\">{`Popover ${color}`}</Popover.Title>\n                            <Popover.Content>\n                              Sed posuere consectetur est at lobortis. Aenean eu leo quam.\n                            </Popover.Content>\n                          </Popover>\n                        }\n                      >\n                        <Button className=\"mr-2 mb-2\" variant={`${color}`}>Popover on {color}</Button>\n                      </OverlayTrigger>\n                    ))}\n                  </ButtonToolbar>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Tooltips\n"],"sourceRoot":""}