{"version":3,"sources":["app/notifications/Notifications.js"],"names":["Notifications","toastoptions","hideAfter","position","heading","className","aria-label","href","onClick","event","preventDefault","aria-current","type","cogoToast","success","info","warn","error","map","variant","idx","key","Component"],"mappings":"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","file":"static/js/104.7441cc8e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport cogoToast from 'cogo-toast';\nimport Alert from 'react-bootstrap/Alert'\n\nexport class Notifications extends Component {\n\n    toastoptions = {\n        hideAfter: 5,\n        position: 'top-right',\n        heading: 'Attention'\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Notifications\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Features</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Notifications</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 grid-margin\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Toast Styles</h4>\n                                <p className=\"card-description mb-0\">\n                                Click on the below buttons for notifications in different styles. \n                                </p>\n                                <p className=\"card-description\">\n                                Specify the predefined types of toasts - success, info, warn and error\n                                </p>\n                                <div className=\"template-demo d-flex justify-content-md-between flex-wrap\">\n                                    <button type=\"button\" className=\"btn btn-success btn-fw\" onClick={() => cogoToast.success('This is a success message!', this.toastoptions)} >Success</button>\n                                    <button type=\"button\" className=\"btn btn-info btn-fw\" onClick={() => cogoToast.info('This is a success message!', this.toastoptions)} >Info</button>\n                                    <button type=\"button\" className=\"btn btn-warning btn-fw\" onClick={() => cogoToast.warn('This is a success message!', this.toastoptions)} >Warning</button>\n                                    <button type=\"button\" className=\"btn btn-danger btn-fw\" onClick={() => cogoToast.error('This is a success message!', this.toastoptions)} >Error</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 grid-margin\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Toast Positions</h4>\n                                <p className=\"card-description mb-0\">\n                                The <code>position</code> property can be used to specify the predefined positions of toasts.\n                                </p>\n                                <p className=\"card-description\">\n                                Specify the predefined types of toasts - success, info, warn and error\n                                </p>\n                                <div className=\"template-demo d-flex justify-content-md-between flex-wrap\">\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Top Left!', {position: 'top-left'})} >Top Left</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Top Center!', {position: 'top-center'})} >Top Center</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Top Right!', {position: 'top-right'})} >Top Right</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Bottom Left!', {position: 'bottom-left'})} >Bottom Left</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Bottom Center!', {position: 'bottom-center'})} >Bottom Center</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Bottom Right!', {position: 'bottom-right'})} >Bottom Right</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Bootstrap alert</h4>\n                                <p className=\"card-description\">\n                                Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight <code>variant</code>s.\n                                </p>\n                                {\n                                    [\n                                        'primary',\n                                        'secondary',\n                                        'success',\n                                        'danger',\n                                        'warning',\n                                        'info',\n                                        'light',\n                                        'dark',\n                                      ].map((variant, idx) => (\n                                        <Alert key={idx} variant={variant}>\n                                          This is a {variant} alertâ€”check it out!\n                                        </Alert>\n                                      ))\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Custom alert</h4>\n                                <p className=\"card-description\">Alerts can contain whatever content you like. Headers, paragraphs, dividers, go crazy.</p>\n                                <Alert variant=\"secondary\">\n                                    <p className=\"p-3 mb-0\">\n                                    Well done! You successfully read this important alert message.\n                                    </p>\n                                    <p className=\"mb-0 p-3\">\n                                        <button className=\"btn btn-secondary mb-2 mr-2\">Ok</button><button className=\"btn btn-inverse-secondary mb-2\">Cancel</button>\n                                    </p>\n                                </Alert>\n                                <Alert variant=\"info\">\n                                    <p className=\"p-3 mb-0\">\n                                    Heads up! This alert needs your attention, but it's not super important.\n                                    </p>\n                                    <p className=\"mb-0 p-3\">\n                                        <button className=\"btn btn-info mb-2 mr-2\">Ok</button><button className=\"btn btn-light mb-2\">Cancel</button>\n                                    </p>\n                                </Alert>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Notifications\n"],"sourceRoot":""}